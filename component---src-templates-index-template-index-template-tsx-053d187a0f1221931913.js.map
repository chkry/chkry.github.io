{"version":3,"file":"component---src-templates-index-template-index-template-tsx-053d187a0f1221931913.js","mappings":"2JAMW,EAAO,2BCoDlB,MA9C8BA,IAAA,IAAC,MAAEC,GAAcD,EAAA,OAC7CE,EAAAA,cAAA,OAAKC,UDTW,4BCUbF,EAAMG,KAAKC,IAAI,IAAAC,EAAA,OACdJ,EAAAA,cAAA,OAAKC,UDVO,2BCUiBI,IAAKF,EAAKG,KAAKC,OAAOC,MACjDR,EAAAA,cAAA,OAAKC,UDTK,4BCuBRD,EAAAA,cAAA,QAAMC,UD7BM,gCC8BVD,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAIP,EAAKG,KAAKC,OAAOI,aAAcV,UAAWW,GACjDT,EAAKG,KAAKO,YAAYC,YAI7Bd,EAAAA,cAAA,MAAIC,UD1BO,6BC2BTD,EAAAA,cAACS,EAAAA,KAAI,CACHR,UAAWW,EACXF,IAAyB,QAArBN,EAAAD,EAAKG,KAAKO,mBAAW,IAAAT,OAAA,EAArBA,EAAuBI,OAAQL,EAAKG,KAAKC,OAAOC,MAEnDL,EAAKG,KAAKO,YAAYE,QAG3Bf,EAAAA,cAAA,KAAGC,UD1Cc,mCC2CdE,EAAKG,KAAKO,YAAYG,aAQrB,IAEJ,C,2GCtDGC,EAAU,oCCqDrB,MAtCmBnB,IAKL,IALM,aAClBoB,EAAY,aACZC,EAAY,YACZC,EAAW,YACXC,GACMvB,EACN,MAAMwB,EAAgBC,IDhBE,yCCgB8B,CACpD,CAACX,IAAkBS,IAGfG,EAAgBD,IDvBF,qCCuB8B,CAChD,CAACX,IAAkBQ,IAGrB,OACEpB,EAAAA,cAAA,OAAKC,UD3Be,wCC4BlBD,EAAAA,cAAA,OAAKC,UD3BW,sCC4BdD,EAAAA,cAACS,EAAAA,KAAI,CACHgB,IAAI,OACJf,GAAIW,EAAcH,EAAe,IACjCjB,UAAWqB,GAEVI,EAAAA,EAAAA,YAGL1B,EAAAA,cAAA,OAAKC,UDvCO,kCCwCVD,EAAAA,cAACS,EAAAA,KAAI,CACHgB,IAAI,OACJf,GAAIU,EAAcD,EAAe,IACjClB,UAAWuB,GAEVE,EAAAA,EAAAA,YAGD,C,qJC9BV,MAiDaC,EAAwBC,IAAsB,IAArB,YAAEC,GAAaD,EACnD,MAAM,MAAEb,EAAK,SAAEe,IAAaC,EAAAA,EAAAA,OAE1BC,YAAcC,YAAaC,IACzBL,EACEM,EAAYD,EAAO,EAAC,gBAAmBA,EAAI,MAAMnB,EAAUA,EAEjE,OAAOf,EAAAA,cAACoC,EAAAA,EAAI,CAACrB,MAAOoB,EAAWnB,YAAac,GAAY,EAG1D,UA3DuChC,IAAmC,IAAlC,KAAEuC,EAAI,YAAER,GAAoB/B,EAClE,MAAM,WAAEkC,GAAeH,GACjB,YAAET,EAAW,YAAEC,EAAW,aAAEH,EAAY,aAAEC,GAAiBa,GAE3D,MAAEjC,GAAUsC,EAAKC,kBAEvB,OACEtC,EAAAA,cAACuC,EAAAA,EAAM,KACLvC,EAAAA,cAACwC,EAAAA,EAAO,CAACC,SAAO,IAChBzC,EAAAA,cAAC0C,EAAAA,EAAI,KACH1C,EAAAA,cAAC2C,EAAAA,EAAI,CAAC5C,MAAOA,IACbC,EAAAA,cAAC4C,EAAAA,EAAU,CACT1B,aAAcA,EACdC,aAAcA,EACdE,YAAaA,EACbD,YAAaA,KAGV,C","sources":["webpack://chkry/./src/components/Feed/Feed.module.scss","webpack://chkry/./src/components/Feed/Feed.tsx","webpack://chkry/./src/components/Pagination/Pagination.module.scss","webpack://chkry/./src/components/Pagination/Pagination.tsx","webpack://chkry/./src/templates/IndexTemplate/IndexTemplate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var category = \"Feed-module--category--59f58\";\nexport var description = \"Feed-module--description--57348\";\nexport var divider = \"Feed-module--divider--81a18\";\nexport var feed = \"Feed-module--feed--a6204\";\nexport var item = \"Feed-module--item--c7a63\";\nexport var link = \"Feed-module--link--6123b\";\nexport var meta = \"Feed-module--meta--250c2\";\nexport var more = \"Feed-module--more--51a4e\";\nexport var time = \"Feed-module--time--72864\";\nexport var title = \"Feed-module--title--f252f\";","import React from \"react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Edge } from \"@/types\";\n\nimport * as styles from \"./Feed.module.scss\";\n\ntype Props = {\n  edges: Array<Edge>;\n};\n\nconst Feed: React.FC<Props> = ({ edges }: Props) => (\n  <div className={styles.feed}>\n    {edges.map((edge) => (\n      <div className={styles.item} key={edge.node.fields.slug}>\n        <div className={styles.meta}>\n          {/* <time\n            className={styles.time}\n            dateTime={new Date(edge.node.frontmatter.date).toLocaleDateString(\n              \"en-US\",\n              { year: \"numeric\", month: \"long\", day: \"numeric\" },\n            )}\n          >\n            {new Date(edge.node.frontmatter.date).toLocaleDateString(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\",\n            })}\n          </time> */}\n          {/* <span className={styles.divider} /> */}\n          <span className={styles.category}>\n            <Link to={edge.node.fields.categorySlug} className={styles.link}>\n              {edge.node.frontmatter.category}\n            </Link>\n          </span>\n        </div>\n        <h2 className={styles.title}>\n          <Link\n            className={styles.link}\n            to={edge.node.frontmatter?.slug || edge.node.fields.slug}\n          >\n            {edge.node.frontmatter.title}\n          </Link>\n        </h2>\n        <p className={styles.description}>\n          {edge.node.frontmatter.description}\n        </p>\n        {/* <Link\n          className={styles.more}\n          to={edge.node.frontmatter?.slug || edge.node.fields.slug}\n        >\n          Read More\n        </Link> */}\n      </div>\n    ))}\n  </div>\n);\n\nexport default Feed;\n","// extracted by mini-css-extract-plugin\nexport var disable = \"Pagination-module--disable--7e105\";\nexport var next = \"Pagination-module--next--1cab8\";\nexport var nextLink = \"Pagination-module--nextLink--532ff\";\nexport var pagination = \"Pagination-module--pagination--d61cb\";\nexport var previous = \"Pagination-module--previous--4a76b\";\nexport var previousLink = \"Pagination-module--previousLink--5590d\";","import React from \"react\";\n\nimport classNames from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport { PAGINATION } from \"@/constants\";\n\nimport * as styles from \"./Pagination.module.scss\";\n\ntype Props = {\n  prevPagePath: string;\n  nextPagePath: string;\n  hasNextPage: boolean;\n  hasPrevPage: boolean;\n};\n\nconst Pagination = ({\n  prevPagePath,\n  nextPagePath,\n  hasNextPage,\n  hasPrevPage,\n}: Props) => {\n  const prevClassName = classNames(styles.previousLink, {\n    [styles.disable]: !hasPrevPage,\n  });\n\n  const nextClassName = classNames(styles.nextLink, {\n    [styles.disable]: !hasNextPage,\n  });\n\n  return (\n    <div className={styles.pagination}>\n      <div className={styles.previous}>\n        <Link\n          rel=\"prev\"\n          to={hasPrevPage ? prevPagePath : \"/\"}\n          className={prevClassName}\n        >\n          {PAGINATION.PREV_PAGE}\n        </Link>\n      </div>\n      <div className={styles.next}>\n        <Link\n          rel=\"next\"\n          to={hasNextPage ? nextPagePath : \"/\"}\n          className={nextClassName}\n        >\n          {PAGINATION.NEXT_PAGE}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { Feed } from \"@/components/Feed\";\nimport { Layout } from \"@/components/Layout\";\nimport { Meta } from \"@/components/Meta\";\nimport { Page } from \"@/components/Page\";\nimport { Pagination } from \"@/components/Pagination\";\nimport { Sidebar } from \"@/components/Sidebar\";\nimport { useSiteMetadata } from \"@/hooks\";\nimport { AllMarkdownRemark, PageContext } from \"@/types\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: AllMarkdownRemark;\n  };\n  pageContext: PageContext;\n}\n\nconst IndexTemplate: React.FC<Props> = ({ data, pageContext }: Props) => {\n  const { pagination } = pageContext;\n  const { hasNextPage, hasPrevPage, prevPagePath, nextPagePath } = pagination;\n\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <Sidebar isIndex />\n      <Page>\n        <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($limit: Int!, $offset: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $offset\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          frontmatter {\n            description\n            category\n            title\n            date\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: React.FC<Props> = ({ pageContext }) => {\n  const { title, subtitle } = useSiteMetadata();\n  const {\n    pagination: { currentPage: page },\n  } = pageContext;\n  const pageTitle = page > 0 ? `Posts - Page ${page} - ${title}` : title;\n\n  return <Meta title={pageTitle} description={subtitle} />;\n};\n\nexport default IndexTemplate;\n"],"names":["_ref","edges","React","className","map","edge","_edge$node$frontmatte","key","node","fields","slug","Link","to","categorySlug","styles","frontmatter","category","title","description","disable","prevPagePath","nextPagePath","hasNextPage","hasPrevPage","prevClassName","classNames","nextClassName","rel","PAGINATION","Head","_ref2","pageContext","subtitle","useSiteMetadata","pagination","currentPage","page","pageTitle","Meta","data","allMarkdownRemark","Layout","Sidebar","isIndex","Page","Feed","Pagination"],"sourceRoot":""}