{"version":3,"file":"component---src-templates-index-template-index-template-tsx-053d187a0f1221931913.js","mappings":"2JAMW,EAAO,2BCoDlB,MA9C8BA,IAAA,IAAC,MAAEC,GAAcD,EAAA,OAC7CE,EAAAA,cAAA,OAAKC,UDTW,4BCUbF,EAAMG,KAAKC,IAAI,IAAAC,EAAA,OACdJ,EAAAA,cAAA,OAAKC,UDVO,2BCUiBI,IAAKF,EAAKG,KAAKC,OAAOC,MACjDR,EAAAA,cAAA,OAAKC,UDTK,4BCuBRD,EAAAA,cAAA,QAAMC,UD7BM,gCC8BVD,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAIP,EAAKG,KAAKC,OAAOI,aAAcV,UAAWW,GACjDT,EAAKG,KAAKO,YAAYC,YAI7Bd,EAAAA,cAAA,MAAIC,UD1BO,6BC2BTD,EAAAA,cAACS,EAAAA,KAAI,CACHR,UAAWW,EACXF,IAAyB,QAArBN,EAAAD,EAAKG,KAAKO,mBAAW,IAAAT,OAAA,EAArBA,EAAuBI,OAAQL,EAAKG,KAAKC,OAAOC,MAEnDL,EAAKG,KAAKO,YAAYE,QAG3Bf,EAAAA,cAAA,KAAGC,UD1Cc,mCC2CdE,EAAKG,KAAKO,YAAYG,aAQrB,IAEJ,C,2GCtDGC,EAAU,oCCqDrB,MAtCmBnB,IAKL,IALM,aAClBoB,EAAY,aACZC,EAAY,YACZC,EAAW,YACXC,GACMvB,EACN,MAAMwB,EAAgBC,IDhBE,yCCgB8B,CACpD,CAACX,IAAkBS,IAGfG,EAAgBD,IDvBF,qCCuB8B,CAChD,CAACX,IAAkBQ,IAGrB,OACEpB,EAAAA,cAAA,OAAKC,UD3Be,wCC4BlBD,EAAAA,cAAA,OAAKC,UD3BW,sCC4BdD,EAAAA,cAACS,EAAAA,KAAI,CACHgB,IAAI,OACJf,GAAIW,EAAcH,EAAe,IACjCjB,UAAWqB,GAEVI,EAAAA,EAAAA,YAGL1B,EAAAA,cAAA,OAAKC,UDvCO,kCCwCVD,EAAAA,cAACS,EAAAA,KAAI,CACHgB,IAAI,OACJf,GAAIU,EAAcD,EAAe,IACjClB,UAAWuB,GAEVE,EAAAA,EAAAA,YAGD,C,qJC9BV,MAiDaC,EAAwBC,IAAsB,IAArB,YAAEC,GAAaD,EACnD,MAAM,MAAEb,EAAK,SAAEe,IAAaC,EAAAA,EAAAA,OAE1BC,YAAcC,YAAaC,IACzBL,EACEM,EAAYD,EAAO,EAAC,gBAAmBA,EAAI,MAAMnB,EAAUA,EAEjE,OAAOf,EAAAA,cAACoC,EAAAA,EAAI,CAACrB,MAAOoB,EAAWnB,YAAac,GAAY,EAG1D,UA3DuChC,IAAmC,IAAlC,KAAEuC,EAAI,YAAER,GAAoB/B,EAClE,MAAM,WAAEkC,GAAeH,GACjB,YAAET,EAAW,YAAEC,EAAW,aAAEH,EAAY,aAAEC,GAAiBa,GAE3D,MAAEjC,GAAUsC,EAAKC,kBAEvB,OACEtC,EAAAA,cAACuC,EAAAA,EAAM,KACLvC,EAAAA,cAACwC,EAAAA,EAAO,CAACC,SAAO,IAChBzC,EAAAA,cAAC0C,EAAAA,EAAI,KACH1C,EAAAA,cAAC2C,EAAAA,EAAI,CAAC5C,MAAOA,IACbC,EAAAA,cAAC4C,EAAAA,EAAU,CACT1B,aAAcA,EACdC,aAAcA,EACdE,YAAaA,EACbD,YAAaA,KAGV,C","sources":["webpack://chkry/./src/components/Feed/Feed.module.scss","webpack://chkry/./src/components/Feed/Feed.tsx","webpack://chkry/./src/components/Pagination/Pagination.module.scss","webpack://chkry/./src/components/Pagination/Pagination.tsx","webpack://chkry/./src/templates/IndexTemplate/IndexTemplate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var category = \"Feed-module--category--59f58\";\nexport var description = \"Feed-module--description--57348\";\nexport var divider = \"Feed-module--divider--81a18\";\nexport var feed = \"Feed-module--feed--a6204\";\nexport var item = \"Feed-module--item--c7a63\";\nexport var link = \"Feed-module--link--6123b\";\nexport var meta = \"Feed-module--meta--250c2\";\nexport var more = \"Feed-module--more--51a4e\";\nexport var time = \"Feed-module--time--72864\";\nexport var title = \"Feed-module--title--f252f\";","import React from \"react\";\r\n\r\nimport { Link } from \"gatsby\";\r\n\r\nimport { Edge } from \"@/types\";\r\n\r\nimport * as styles from \"./Feed.module.scss\";\r\n\r\ntype Props = {\r\n  edges: Array<Edge>;\r\n};\r\n\r\nconst Feed: React.FC<Props> = ({ edges }: Props) => (\r\n  <div className={styles.feed}>\r\n    {edges.map((edge) => (\r\n      <div className={styles.item} key={edge.node.fields.slug}>\r\n        <div className={styles.meta}>\r\n          {/* <time\r\n            className={styles.time}\r\n            dateTime={new Date(edge.node.frontmatter.date).toLocaleDateString(\r\n              \"en-US\",\r\n              { year: \"numeric\", month: \"long\", day: \"numeric\" },\r\n            )}\r\n          >\r\n            {new Date(edge.node.frontmatter.date).toLocaleDateString(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n            })}\r\n          </time> */}\r\n          {/* <span className={styles.divider} /> */}\r\n          <span className={styles.category}>\r\n            <Link to={edge.node.fields.categorySlug} className={styles.link}>\r\n              {edge.node.frontmatter.category}\r\n            </Link>\r\n          </span>\r\n        </div>\r\n        <h2 className={styles.title}>\r\n          <Link\r\n            className={styles.link}\r\n            to={edge.node.frontmatter?.slug || edge.node.fields.slug}\r\n          >\r\n            {edge.node.frontmatter.title}\r\n          </Link>\r\n        </h2>\r\n        <p className={styles.description}>\r\n          {edge.node.frontmatter.description}\r\n        </p>\r\n        {/* <Link\r\n          className={styles.more}\r\n          to={edge.node.frontmatter?.slug || edge.node.fields.slug}\r\n        >\r\n          Read More\r\n        </Link> */}\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Feed;\r\n","// extracted by mini-css-extract-plugin\nexport var disable = \"Pagination-module--disable--7e105\";\nexport var next = \"Pagination-module--next--1cab8\";\nexport var nextLink = \"Pagination-module--nextLink--532ff\";\nexport var pagination = \"Pagination-module--pagination--d61cb\";\nexport var previous = \"Pagination-module--previous--4a76b\";\nexport var previousLink = \"Pagination-module--previousLink--5590d\";","import React from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"gatsby\";\r\n\r\nimport { PAGINATION } from \"@/constants\";\r\n\r\nimport * as styles from \"./Pagination.module.scss\";\r\n\r\ntype Props = {\r\n  prevPagePath: string;\r\n  nextPagePath: string;\r\n  hasNextPage: boolean;\r\n  hasPrevPage: boolean;\r\n};\r\n\r\nconst Pagination = ({\r\n  prevPagePath,\r\n  nextPagePath,\r\n  hasNextPage,\r\n  hasPrevPage,\r\n}: Props) => {\r\n  const prevClassName = classNames(styles.previousLink, {\r\n    [styles.disable]: !hasPrevPage,\r\n  });\r\n\r\n  const nextClassName = classNames(styles.nextLink, {\r\n    [styles.disable]: !hasNextPage,\r\n  });\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <div className={styles.previous}>\r\n        <Link\r\n          rel=\"prev\"\r\n          to={hasPrevPage ? prevPagePath : \"/\"}\r\n          className={prevClassName}\r\n        >\r\n          {PAGINATION.PREV_PAGE}\r\n        </Link>\r\n      </div>\r\n      <div className={styles.next}>\r\n        <Link\r\n          rel=\"next\"\r\n          to={hasNextPage ? nextPagePath : \"/\"}\r\n          className={nextClassName}\r\n        >\r\n          {PAGINATION.NEXT_PAGE}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport { Feed } from \"@/components/Feed\";\r\nimport { Layout } from \"@/components/Layout\";\r\nimport { Meta } from \"@/components/Meta\";\r\nimport { Page } from \"@/components/Page\";\r\nimport { Pagination } from \"@/components/Pagination\";\r\nimport { Sidebar } from \"@/components/Sidebar\";\r\nimport { useSiteMetadata } from \"@/hooks\";\r\nimport { AllMarkdownRemark, PageContext } from \"@/types\";\r\n\r\ninterface Props {\r\n  data: {\r\n    allMarkdownRemark: AllMarkdownRemark;\r\n  };\r\n  pageContext: PageContext;\r\n}\r\n\r\nconst IndexTemplate: React.FC<Props> = ({ data, pageContext }: Props) => {\r\n  const { pagination } = pageContext;\r\n  const { hasNextPage, hasPrevPage, prevPagePath, nextPagePath } = pagination;\r\n\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <Layout>\r\n      <Sidebar isIndex />\r\n      <Page>\r\n        <Feed edges={edges} />\r\n        <Pagination\r\n          prevPagePath={prevPagePath}\r\n          nextPagePath={nextPagePath}\r\n          hasPrevPage={hasPrevPage}\r\n          hasNextPage={hasNextPage}\r\n        />\r\n      </Page>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query IndexTemplate($limit: Int!, $offset: Int!) {\r\n    allMarkdownRemark(\r\n      limit: $limit\r\n      skip: $offset\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            categorySlug\r\n            slug\r\n          }\r\n          frontmatter {\r\n            description\r\n            category\r\n            title\r\n            date\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head: React.FC<Props> = ({ pageContext }) => {\r\n  const { title, subtitle } = useSiteMetadata();\r\n  const {\r\n    pagination: { currentPage: page },\r\n  } = pageContext;\r\n  const pageTitle = page > 0 ? `Posts - Page ${page} - ${title}` : title;\r\n\r\n  return <Meta title={pageTitle} description={subtitle} />;\r\n};\r\n\r\nexport default IndexTemplate;\r\n"],"names":["_ref","edges","React","className","map","edge","_edge$node$frontmatte","key","node","fields","slug","Link","to","categorySlug","styles","frontmatter","category","title","description","disable","prevPagePath","nextPagePath","hasNextPage","hasPrevPage","prevClassName","classNames","nextClassName","rel","PAGINATION","Head","_ref2","pageContext","subtitle","useSiteMetadata","pagination","currentPage","page","pageTitle","Meta","data","allMarkdownRemark","Layout","Sidebar","isIndex","Page","Feed","Pagination"],"sourceRoot":""}